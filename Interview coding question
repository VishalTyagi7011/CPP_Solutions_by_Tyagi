----------------------------------------------------------------------------------------
  Find the longest word in a sentence .
----------------------------------------------------------------------------------------

#include <iostream>
std::string LongestSubString(std:: string str)
{
    std::string ans="";
    int len=str.length(),left=0,maxlen=0,count=0;

 for(int i=0;i<=len;++i)
    {
        if(str[i]==' ' or i==len)
        {
            if(i-left >maxlen)
            {
                maxlen=i-left;
                ans=str.substr(left,maxlen+1);
                count++;
                
            }
            left=i+1;
        }
    }

    return ans;
}

int main()
{
    std::cout<<LongestSubString("my name is vishal");

    return 0;
}



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
----------------------------------------------------------------------------
 Check string is palindrome or not 
-----------------------------------------------------------------------------
/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>

bool IsPalindrome(std::string str)
{
    int len=str.length();
    for(int i=0;i<len/2;i++)
    {
        if(str[i]!=str[len-1-i])
        {
            return false;
        }
    }
    return true;
}

int main()
{
    std::string str;
    std::cout<<"Enter the string :";
    getline(std::cin,str);
    if(IsPalindrome(str))
    {
        std::cout<<"string is palindrome";
    }
    else
    {
        std::cout<<"string is not palindrome";
    }

    return 0;
}


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-------------------------------------------------------
Remove Duplicates from Array
--------------------------------------------------------



#include <iostream>
#include<unordered_set>

void RemoveDuplicate(int arr[],int len)
{
    std::unordered_set<int>myset(arr,arr+len);

    int count=0;
    for(int i: myset)
    {
      arr[count++]=i;  
    }
    for(int i=count;i<len;i++)
    {
        arr[i]=-1;
    }
    
    for(int i=0;i<len;i++)
    {
        std::cout<<arr[i]<<" ";
    }
}

int main()
{
    int arr[]={1,2,3,4,4,3,5,6,8,7,2,4,0},size=sizeof(arr)/sizeof(arr[0]);
    RemoveDuplicate(arr,size);

    return 0;
}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++





